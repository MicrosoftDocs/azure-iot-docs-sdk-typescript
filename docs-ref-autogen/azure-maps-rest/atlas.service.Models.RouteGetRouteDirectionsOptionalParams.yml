### YamlMime:TSType
name: RouteGetRouteDirectionsOptionalParams
uid: azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams
package: azure-maps-rest
summary: Optional Parameters.
fullName: RouteGetRouteDirectionsOptionalParams
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.abortSignal
    package: azure-maps-rest
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type: AbortSignalLike
        description: ''
  - name: accelerationEfficiency
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.accelerationEfficiency
    package: azure-maps-rest
    summary: >
      Specifies the efficiency of converting chemical energy stored in fuel to
      kinetic energy when

      the vehicle accelerates _(i.e.
      KineticEnergyGained/ChemicalEnergyConsumed).

      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using

      **fuelEnergyDensityInMJoulesPerLiter**.

      Must be paired with **decelerationEfficiency**.


      The range of values allowed are 0.0 to 1/**decelerationEfficiency**.


      Sensible Values : for **Combustion Model** : 0.33, for **Electric Model**
      : 0.66
    fullName: accelerationEfficiency
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accelerationEfficiency?: number'
      return:
        type: number
        description: ''
  - name: alternativeType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.alternativeType
    package: azure-maps-rest
    summary: >-
      Controls the optimality, with respect to the given planning criteria, of
      the calculated

      alternatives compared to the reference route. Possible values include:
      'anyRoute',

      'betterRoute'
    fullName: alternativeType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'alternativeType?: AlternativeRouteType'
      return:
        type: >-
          <xref uid="azure-maps-rest.atlas.service.Models.AlternativeRouteType"
          />
        description: ''
  - name: arriveAt
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.arriveAt
    package: azure-maps-rest
    summary: >-
      The date and time of arrival at the destination point. It must be
      specified as a dateTime.

      When a time zone offset is not specified it will be assumed to be that of
      the destination

      point. The arriveAt value must be in the future. The arriveAt parameter
      cannot be used in

      conjunction with departAt, minDeviationDistance or minDeviationTime.
    fullName: arriveAt
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'arriveAt?: Date'
      return:
        type: Date
        description: ''
  - name: auxiliaryPowerInkW
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInkW
    package: azure-maps-rest
    summary: >
      Specifies the amount of power consumed for sustaining auxiliary systems,
      in kilowatts (kW).

      It can be used to specify consumption due to devices and systems such as
      AC systems, radio,

      heating, etc.


      Sensible Values : 1.7
    fullName: auxiliaryPowerInkW
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'auxiliaryPowerInkW?: string'
      return:
        type: string
        description: ''
  - name: auxiliaryPowerInLitersPerHour
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.auxiliaryPowerInLitersPerHour
    package: azure-maps-rest
    summary: >
      Specifies the amount of fuel consumed for sustaining auxiliary systems of
      the vehicle, in

      liters per hour.

      It can be used to specify consumption due to devices and systems such as
      AC systems, radio,

      heating, etc.


      Sensible Values : 0.2
    fullName: auxiliaryPowerInLitersPerHour
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'auxiliaryPowerInLitersPerHour?: number'
      return:
        type: number
        description: ''
  - name: avoid
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.avoid
    package: azure-maps-rest
    summary: >-
      Specifies something that the route calculation should try to avoid when
      determining the route.

      Can be specified multiple times in one request, for example,

      '&avoid=motorways&avoid=tollRoads&avoid=ferries'. In
      calculateReachableRange requests, the

      value alreadyUsedRoads must not be used. Possible values include:
      'tollRoads', 'motorways',

      'ferries', 'unpavedRoads', 'carpools', 'alreadyUsedRoads',
      'borderCrossings'
    fullName: avoid
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'avoid?: Avoid'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.Avoid" />
        description: ''
  - name: computeBestOrder
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.computeBestOrder
    package: azure-maps-rest
    summary: >-
      Re-order the route waypoints to reduce the route length. Yields best
      results when used in

      conjunction with routeType _shortest_. Possible values are true or false.
      True computes a

      better order if possible, but is not allowed to be used in conjunction
      with maxAlternatives

      value greater than 0 or in conjunction with circle waypoints. False will
      use the locations  in

      the given order and not allowed to be used in conjunction with
      routeRepresentation

      _none_.
    fullName: computeBestOrder
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'computeBestOrder?: boolean'
      return:
        type: boolean
        description: ''
  - name: computeTravelTimeFor
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.computeTravelTimeFor
    package: azure-maps-rest
    summary: >-
      Specifies whether to return additional travel times using different types
      of traffic

      information (none, historic, live) as well as the default best-estimate
      travel time. Possible

      values include: 'none', 'all'
    fullName: computeTravelTimeFor
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'computeTravelTimeFor?: ComputeTravelTimeFor'
      return:
        type: >-
          <xref uid="azure-maps-rest.atlas.service.Models.ComputeTravelTimeFor"
          />
        description: ''
  - name: constantSpeedConsumptionInkWhPerHundredkm
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInkWhPerHundredkm
    package: azure-maps-rest
    summary: >
      Specifies the speed-dependent component of consumption.

      Provided as an unordered list of speed/consumption-rate pairs. The list
      defines points on a

      consumption curve. Consumption rates for speeds not in the list are found
      as follows:


      * by linear interpolation, if the given speed lies in between two speeds
      in the list


      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by

      the nearest two points in the list


      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate

      points for the same speed. If it only contains a single point, then the
      consumption rate of

      that point is used without further processing.


      Consumption specified for the largest speed must be greater than or equal
      to that of the

      penultimate largest speed. This ensures that extrapolation does not lead
      to negative

      consumption rates.


      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to

      a negative consumption rate for any smaller  speed.


      The valid range for the consumption values(expressed in kWh/100km) is
      between 0.01 and

      100000.0.


      Sensible Values : 50,8.2:130,21.3


      This parameter is required for **Electric consumption model**.
    fullName: constantSpeedConsumptionInkWhPerHundredkm
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constantSpeedConsumptionInkWhPerHundredkm?: string'
      return:
        type: string
        description: ''
  - name: constantSpeedConsumptionInLitersPerHundredkm
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.constantSpeedConsumptionInLitersPerHundredkm
    package: azure-maps-rest
    summary: >
      Specifies the speed-dependent component of consumption.

      Provided as an unordered list of colon-delimited speed & consumption-rate
      pairs. The list

      defines points on a consumption curve. Consumption rates for speeds not in
      the list are found

      as follows:


      * by linear interpolation, if the given speed lies in between two speeds
      in the list


      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by

      the nearest two points in the list


      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate

      points for the same speed. If it only contains a single point, then the
      consumption rate of

      that point is used without further processing.


      Consumption specified for the largest speed must be greater than or equal
      to that of the

      penultimate largest speed. This ensures that extrapolation does not lead
      to negative

      consumption rates.


      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to

      a negative consumption rate for any smaller speed.


      The valid range for the consumption values(expressed in l/100km) is
      between 0.01 and 100000.0.


      Sensible Values : 50,6.3:130,11.5


      **Note** : This parameter is required for **The Combustion Consumption
      Model**.
    fullName: constantSpeedConsumptionInLitersPerHundredkm
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constantSpeedConsumptionInLitersPerHundredkm?: number'
      return:
        type: number
        description: ''
  - name: currentChargeInkWh
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.currentChargeInkWh
    package: azure-maps-rest
    summary: |
      Specifies the current electric energy supply in kilowatt hours (kWh).
      This parameter co-exists with **maxChargeInkWh** parameter.

      The range of values allowed are 0.0 to **maxChargeInkWh**.

      Sensible Values : 43
    fullName: currentChargeInkWh
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentChargeInkWh?: string'
      return:
        type: string
        description: ''
  - name: currentFuelInLiters
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.currentFuelInLiters
    package: azure-maps-rest
    summary: |
      Specifies the current supply of fuel in liters.
      Sensible Values : 55
    fullName: currentFuelInLiters
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentFuelInLiters?: number'
      return:
        type: number
        description: ''
  - name: customHeaders
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.customHeaders
    package: azure-maps-rest
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: [key: string]: string'
      return:
        type: '[key: string]\: string'
        description: ''
  - name: decelerationEfficiency
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.decelerationEfficiency
    package: azure-maps-rest
    summary: >
      Specifies the efficiency of converting kinetic energy to saved (not
      consumed) fuel when the

      vehicle decelerates _(i.e. ChemicalEnergySaved/KineticEnergyLost).
      ChemicalEnergySaved_ is

      obtained by converting saved (not consumed) fuel to energy using

      **fuelEnergyDensityInMJoulesPerLiter**.

      Must be paired with **accelerationEfficiency**.


      The range of values allowed are 0.0 to 1/**accelerationEfficiency**.


      Sensible Values : for **Combustion Model** : 0.83, for **Electric Model**
      : 0.91
    fullName: decelerationEfficiency
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'decelerationEfficiency?: number'
      return:
        type: number
        description: ''
  - name: departAt
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.departAt
    package: azure-maps-rest
    summary: >-
      The date and time of departure from the origin point. Departure times
      apart from now must be

      specified as a dateTime. When a time zone offset is not specified, it will
      be assumed to be

      that of the origin point. The departAt value must be in the future in the
      date-time format

      (1996-12-19T16:39:57-08:00).
    fullName: departAt
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'departAt?: Date'
      return:
        type: Date
        description: ''
  - name: downhillEfficiency
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.downhillEfficiency
    package: azure-maps-rest
    summary: >
      Specifies the efficiency of converting potential energy to saved (not
      consumed) fuel when the

      vehicle loses elevation _(i.e. ChemicalEnergySaved/PotentialEnergyLost).
      ChemicalEnergySaved_

      is obtained by converting saved (not consumed) fuel to energy using

      **fuelEnergyDensityInMJoulesPerLiter**.

      Must be paired with **uphillEfficiency**.


      The range of values allowed are 0.0 to 1/**uphillEfficiency**.


      Sensible Values : for **Combustion Model** : 0.51, for **Electric Model**
      : 0.73
    fullName: downhillEfficiency
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'downhillEfficiency?: number'
      return:
        type: number
        description: ''
  - name: fuelEnergyDensityInMJoulesPerLiter
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.fuelEnergyDensityInMJoulesPerLiter
    package: azure-maps-rest
    summary: >
      Specifies the amount of chemical energy stored in one liter of fuel in
      megajoules (MJ). It is

      used in conjunction with the ***Efficiency** parameters for conversions
      between saved or

      consumed energy and fuel. For example, energy density is 34.2 MJ/l for
      gasoline, and 35.8 MJ/l

      for Diesel fuel.

      This parameter is required if any ***Efficiency** parameter is set.


      Sensible Values : 34.2
    fullName: fuelEnergyDensityInMJoulesPerLiter
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fuelEnergyDensityInMJoulesPerLiter?: number'
      return:
        type: number
        description: ''
  - name: hilliness
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.hilliness
    package: azure-maps-rest
    summary: >-
      Degree of hilliness for thrilling route. This parameter can only be used
      in conjunction with

      `routeType`=thrilling. Possible values include: 'low', 'normal', 'high'
    fullName: hilliness
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hilliness?: Hilliness'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.Hilliness" />
        description: ''
  - name: instructionsType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.instructionsType
    package: azure-maps-rest
    summary: >-
      If specified, guidance instructions will be returned. Note that the
      instructionsType parameter

      cannot be used in conjunction with routeRepresentation=none. Possible
      values include: 'coded',

      'text', 'tagged'
    fullName: instructionsType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'instructionsType?: RouteInstructionsType'
      return:
        type: >-
          <xref uid="azure-maps-rest.atlas.service.Models.RouteInstructionsType"
          />
        description: ''
  - name: language
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.language
    package: azure-maps-rest
    summary: >-
      The language parameter determines the language of the guidance messages.
      It does not affect

      proper nouns (the names of streets, plazas, etc.) It has no effect when

      instructionsType=coded. Allowed values are (a subset of) the IETF language
      tags described
    fullName: language
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'language?: string'
      return:
        type: string
        description: ''
  - name: maxAlternatives
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.maxAlternatives
    package: azure-maps-rest
    summary: >-
      Number of desired alternative routes to be calculated. Default: 0,
      minimum: 0 and maximum: 5
    fullName: maxAlternatives
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxAlternatives?: number'
      return:
        type: number
        description: ''
  - name: maxChargeInkWh
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.maxChargeInkWh
    package: azure-maps-rest
    summary: >
      Specifies the maximum electric energy supply in kilowatt hours (kWh) that
      may be stored in the

      vehicle's battery.

      This parameter co-exists with **currentChargeInkWh** parameter.


      Minimum value has to be greater than or equal to **currentChargeInkWh**.


      Sensible Values : 85
    fullName: maxChargeInkWh
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxChargeInkWh?: string'
      return:
        type: string
        description: ''
  - name: minDeviationDistance
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.minDeviationDistance
    package: azure-maps-rest
    summary: >-
      All alternative routes returned will follow the reference route (see
      section POST Requests)

      from the origin point of the calculateRoute request for at least this
      number of meters. Can

      only be used when reconstructing a route. The minDeviationDistance
      parameter cannot be used in

      conjunction with arriveAt
    fullName: minDeviationDistance
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minDeviationDistance?: number'
      return:
        type: number
        description: ''
  - name: minDeviationTime
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.minDeviationTime
    package: azure-maps-rest
    summary: >-
      All alternative routes returned will follow the reference route (see
      section POST Requests)

      from the origin point of the calculateRoute request for at least this
      number of seconds. Can

      only be used when reconstructing a route. The minDeviationTime parameter
      cannot be used in

      conjunction with arriveAt
    fullName: minDeviationTime
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minDeviationTime?: number'
      return:
        type: number
        description: ''
  - name: onDownloadProgress
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.onDownloadProgress
    package: azure-maps-rest
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type: '(progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: onUploadProgress
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.onUploadProgress
    package: azure-maps-rest
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type: '(progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: report
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.report
    package: azure-maps-rest
    summary: >-
      Specifies which data should be reported for diagnosis purposes. The only
      possible value is

      _effectiveSettings_. Reports the effective parameters or data used when
      calling the API. In

      the case of defaulted parameters the default will be reflected where the
      parameter was not

      specified by the caller.
    fullName: report
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'report?: string'
      return:
        type: string
        description: ''
  - name: routeRepresentation
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.routeRepresentation
    package: azure-maps-rest
    summary: >-
      Specifies the representation of the set of routes provided as response.
      This parameter value

      can only be used in conjunction with computeBestOrder=true. Possible
      values include:

      'polyline', 'summaryOnly', 'none'
    fullName: routeRepresentation
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'routeRepresentation?: RouteRepresentation'
      return:
        type: >-
          <xref uid="azure-maps-rest.atlas.service.Models.RouteRepresentation"
          />
        description: ''
  - name: routeType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.routeType
    package: azure-maps-rest
    summary: >-
      The type of route requested. Possible values include: 'fastest',
      'shortest', 'eco',

      'thrilling'
    fullName: routeType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'routeType?: RouteType'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.RouteType" />
        description: ''
  - name: sectionType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.sectionType
    package: azure-maps-rest
    summary: >-
      Specifies which of the section types is reported in the route response.
      <br><br>For example if

      sectionType = pedestrian the sections which are suited for pedestrians
      only are returned.

      Multiple types can be used. The default sectionType refers to the
      travelMode input. By default

      travelMode is set to car. Possible values include: 'carTrain', 'country',
      'ferry', 'motorway',

      'pedestrian', 'tollRoad', 'tollVignette', 'traffic', 'travelMode',
      'tunnel'
    fullName: sectionType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sectionType?: SectionType'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.SectionType" />
        description: ''
  - name: timeout
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.timeout
    package: azure-maps-rest
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: number'
      return:
        type: number
        description: ''
  - name: traffic
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.traffic
    package: azure-maps-rest
    summary: >-
      Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing. Note that although
      the current traffic

      data is ignored

      during routing, the effect of historic traffic on effective road speeds is
      still incorporated.
    fullName: traffic
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'traffic?: boolean'
      return:
        type: boolean
        description: ''
  - name: travelMode
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.travelMode
    package: azure-maps-rest
    summary: >-
      The mode of travel for the requested route. Note that the requested
      travelMode may not be

      available for the entire route. Where the requested travelMode is not
      available for a

      particular section, the travelMode element of the response for that
      section will be other.

      Note that travel modes bus, motorcycle, taxi and van are BETA
      functionality. Full restriction

      data is not available in all areas. In **calculateReachableRange**
      requests, the values

      bicycle and pedestrian must not be used. Possible values include: 'car',
      'truck', 'taxi',

      'bus', 'van', 'motorcycle', 'bicycle', 'pedestrian'
    fullName: travelMode
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'travelMode?: TravelMode'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.TravelMode" />
        description: ''
  - name: uphillEfficiency
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.uphillEfficiency
    package: azure-maps-rest
    summary: >
      Specifies the efficiency of converting chemical energy stored in fuel to
      potential energy when

      the vehicle gains elevation _(i.e.
      PotentialEnergyGained/ChemicalEnergyConsumed).

      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using

      **fuelEnergyDensityInMJoulesPerLiter**.

      Must be paired with **downhillEfficiency**.


      The range of values allowed are 0.0 to 1/**downhillEfficiency**.


      Sensible Values : for **Combustion Model** : 0.27, for **Electric Model**
      : 0.74
    fullName: uphillEfficiency
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'uphillEfficiency?: number'
      return:
        type: number
        description: ''
  - name: vehicleAxleWeight
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleAxleWeight
    package: azure-maps-rest
    summary: >-
      Weight per axle of the vehicle in kg. A value of 0 means that weight
      restrictions per axle are

      not considered.
    fullName: vehicleAxleWeight
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleAxleWeight?: number'
      return:
        type: number
        description: ''
  - name: vehicleCommercial
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleCommercial
    package: azure-maps-rest
    summary: >-
      Vehicle is used for commercial purposes and thus may not be allowed to
      drive  on some roads.
    fullName: vehicleCommercial
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleCommercial?: boolean'
      return:
        type: boolean
        description: ''
  - name: vehicleEngineType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleEngineType
    package: azure-maps-rest
    summary: >-
      Engine type of the vehicle. When a detailed Consumption Model is
      specified, it must be

      consistent with the value of **vehicleEngineType**. Possible values
      include: 'combustion',

      'electric'
    fullName: vehicleEngineType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleEngineType?: VehicleEngineType'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.VehicleEngineType" />
        description: ''
  - name: vehicleHeading
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeading
    package: azure-maps-rest
    summary: >-
      The directional heading of the vehicle in degrees starting at true North
      and continuing in

      clockwise direction. North is 0 degrees, east is 90 degrees, south is 180
      degrees, west is 270

      degrees. Possible values 0-359
    fullName: vehicleHeading
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleHeading?: number'
      return:
        type: number
        description: ''
  - name: vehicleHeight
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleHeight
    package: azure-maps-rest
    summary: >-
      Height of the vehicle in meters. A value of 0 means that height
      restrictions are not

      considered.
    fullName: vehicleHeight
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleHeight?: number'
      return:
        type: number
        description: ''
  - name: vehicleLength
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleLength
    package: azure-maps-rest
    summary: >-
      Length of the vehicle in meters. A value of 0 means that length
      restrictions are not

      considered.
    fullName: vehicleLength
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleLength?: number'
      return:
        type: number
        description: ''
  - name: vehicleLoadType
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleLoadType
    package: azure-maps-rest
    summary: >-
      Types of cargo that may be classified as hazardous materials and
      restricted from some roads.

      Available vehicleLoadType values are US Hazmat classes 1 through 9, plus
      generic

      classifications for use in other countries. Values beginning with USHazmat
      are for US routing

      while otherHazmat should be used for all other countries. vehicleLoadType
      can be specified

      multiple times. This parameter is currently only considered for
      travelMode=truck. Possible

      values include: 'USHazmatClass1', 'USHazmatClass2', 'USHazmatClass3',
      'USHazmatClass4',

      'USHazmatClass5', 'USHazmatClass6', 'USHazmatClass7', 'USHazmatClass8',
      'USHazmatClass9',

      'otherHazmatExplosive', 'otherHazmatGeneral', 'otherHazmatHarmfulToWater'
    fullName: vehicleLoadType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleLoadType?: VehicleLoadType'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.VehicleLoadType" />
        description: ''
  - name: vehicleMaxSpeed
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleMaxSpeed
    package: azure-maps-rest
    summary: >-
      Maximum speed of the vehicle in km/hour. A value of 0 means that an
      appropriate value for the

      vehicle will be determined and applied during route planning. A non-zero
      value may be

      overridden during route planning.
    fullName: vehicleMaxSpeed
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleMaxSpeed?: number'
      return:
        type: number
        description: ''
  - name: vehicleWeight
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleWeight
    package: azure-maps-rest
    summary: >
      Weight of the vehicle in kilograms.

      * It is mandatory if any of the *Efficiency parameters are set.


      * It must be strictly positive when used in the context of the Consumption
      Model. Weight

      restrictions are considered.


      * If no detailed **Consumption Model** is specified and the value of
      **vehicleWeight** is

      non-zero, then weight restrictions are considered.


      * In all other cases, this parameter is ignored.


      Sensible Values : for **Combustion Model** : 1600, for **Electric Model**
      : 1900
    fullName: vehicleWeight
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleWeight?: number'
      return:
        type: number
        description: ''
  - name: vehicleWidth
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.vehicleWidth
    package: azure-maps-rest
    summary: >-
      Width of the vehicle in meters. A value of 0 means that width restrictions
      are not considered.
    fullName: vehicleWidth
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vehicleWidth?: number'
      return:
        type: number
        description: ''
  - name: windingness
    uid: >-
      azure-maps-rest.atlas.service.Models.RouteGetRouteDirectionsOptionalParams.windingness
    package: azure-maps-rest
    summary: >-
      Level of turns for thrilling route. This parameter can only be used in
      conjunction with

      routeType=thrilling. Possible values include: 'low', 'normal', 'high'
    fullName: windingness
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'windingness?: Windingness'
      return:
        type: <xref uid="azure-maps-rest.atlas.service.Models.Windingness" />
        description: ''
extends: RequestOptionsBase
