### YamlMime:UniversalReference
items:
  - uid: azure-iot-mqtt-base.MqttBase
    name: MqttBase
    fullName: MqttBase
    children:
      - azure-iot-mqtt-base.MqttBase.constructor
      - azure-iot-mqtt-base.MqttBase.connect
      - azure-iot-mqtt-base.MqttBase.disconnect
      - azure-iot-mqtt-base.MqttBase.publish
      - azure-iot-mqtt-base.MqttBase.subscribe
      - azure-iot-mqtt-base.MqttBase.unsubscribe
      - azure-iot-mqtt-base.MqttBase.updateSharedAccessSignature
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    package: azure-iot-mqtt-base
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.constructor
    name: MqttBase
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MqttBase(sdkVersionString: string, mqttprovider?: any)'
      parameters:
        - id: sdkVersionString
          type:
            - string
          description: ''
        - id: mqttprovider
          type:
            - any
          description: ''
          optional: true
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.connect
    name: connect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(config: TransportConfig, done: (err?: Error, result?:
        any) => void)
      parameters:
        - id: config
          type:
            - '@azure-iot-mqtt-base.MqttBase.TransportConfig'
          description: ''
        - id: done
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.disconnect
    name: disconnect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disconnect(done: (err?: Error, result?: any) => void)'
      parameters:
        - id: done
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.publish
    name: publish
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function publish(topic: string, payload: any, options:
        IClientPublishOptions, done: (err?: Error, result?: any) => void)
      parameters:
        - id: topic
          type:
            - string
          description: ''
        - id: payload
          type:
            - any
          description: ''
        - id: options
          type:
            - IClientPublishOptions
          description: ''
        - id: done
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.subscribe
    name: subscribe
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function subscribe(topic: string, options: IClientSubscribeOptions,
        callback: (err?: Error, result?: any) => void)
      parameters:
        - id: topic
          type:
            - string
          description: ''
        - id: options
          type:
            - IClientSubscribeOptions
          description: ''
        - id: callback
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.unsubscribe
    name: unsubscribe
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unsubscribe(topic: string, callback: (err?: Error, result?:
        any) => void)
      parameters:
        - id: topic
          type:
            - string
          description: ''
        - id: callback
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
  - uid: azure-iot-mqtt-base.MqttBase.updateSharedAccessSignature
    name: updateSharedAccessSignature
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSharedAccessSignature(sharedAccessSignature: string,
        callback: (err?: Error) => void)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
    module: Global
