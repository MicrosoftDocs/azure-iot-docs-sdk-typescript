### YamlMime:UniversalReference
items:
  - uid: azure-iot-provisioning-device.X509Registration
    name: X509Registration
    fullName: X509Registration
    children:
      - azure-iot-provisioning-device.X509Registration.constructor
      - azure-iot-provisioning-device.X509Registration.cancel
      - azure-iot-provisioning-device.X509Registration.register
    langs:
      - typeScript
    type: class
    summary: Client used to run the registration of a device using X509 authentication.
    package: azure-iot-provisioning-device
    module: Global
  - uid: azure-iot-provisioning-device.X509Registration.constructor
    name: X509Registration
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new X509Registration(provisioningHost: string, idScope: string,
        transport: X509ProvisioningTransport, securityClient:
        X509SecurityClient)
      parameters:
        - id: provisioningHost
          type:
            - string
          description: ''
        - id: idScope
          type:
            - string
          description: ''
        - id: transport
          type:
            - X509ProvisioningTransport
          description: ''
        - id: securityClient
          type:
            - '@azure-iot-provisioning-device.X509SecurityClient'
          description: ''
    module: Global
  - uid: azure-iot-provisioning-device.X509Registration.cancel
    name: cancel
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancels the current registration process.
    syntax:
      content: 'function cancel(callback: (err?: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err?: Error) => void'
          description: |
            function called when the registration has already been canceled.
    module: Global
  - uid: azure-iot-provisioning-device.X509Registration.register
    name: register
    children: []
    type: method
    langs:
      - typeScript
    summary: Register the device with the provisioning service.
    syntax:
      content: >-
        function register(callback: (err?: Error, result?: RegistrationResult)
        => void)
      parameters:
        - id: callback
          type:
            - '(err?: Error, result?: RegistrationResult) => void'
          description: |
            function called when registration is complete.
    module: Global
