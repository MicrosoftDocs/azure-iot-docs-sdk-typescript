### YamlMime:UniversalReference
items:
  - uid: azure-iothub.Twin
    name: Twin
    fullName: Twin
    children:
      - azure-iothub.Twin.constructor
      - azure-iothub.Twin.deviceId
      - azure-iothub.Twin.etag
      - azure-iothub.Twin.properties
      - azure-iothub.Twin.tags
      - azure-iothub.Twin.get
      - azure-iothub.Twin.toJSON
      - azure-iothub.Twin.update
    langs:
      - typeScript
    type: class
    summary: >
      A Device Twin is document describing the state of a device that is stored
      by an Azure IoT hub and is available even if the device is offline.

      It is built around 3 sections:
        - Tags: key/value pairs only accessible from the service side
        - Desired Properties: updated by a service and received by the device
        - Reported Properties: updated by the device and received by the service.
      Note that although it is a possibility, desired and reported properties do
      not have to match

      and that the logic to sync these two collections, if necessary, is left to
      the user of the SDK.


      For more information see [Understanding Device
      Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).


      The recommended way to obtain a <xref:azure-iothub.Twin> for a specific
      device is to use the <xref:azure-iothub.Registry.getTwin> method.
    source:
      path: twin.ts
      startLine: 44
      remote:
        path: service/src\twin.ts
        repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
        branch: doc-patches
    package: azure-iothub
  - uid: azure-iothub.Twin.constructor
    name: Twin
    children: []
    langs:
      - typeScript
    summary: >-
      Instantiates a new <xref:azure-iothub.Twin>. The recommended way to get a
      new <xref:azure-iothub.Twin> object is to use the
      <xref:azure-iothub.Registry.getTwin> method.
    syntax:
      content: 'new Twin(device: DeviceIdentity, registryClient: Registry)'
      parameters:
        - id: device
          type:
            - DeviceIdentity
          description: >-
            A device identifier string or an object describing the device. If an
            Object,
                                                it must contain a deviceId property.
        - id: registryClient
          type:
            - '@azure-iothub.Registry'
          description: |
            The HTTP registry client used to execute REST API calls.
    type: constructor
  - uid: azure-iothub.Twin.deviceId
    name: deviceId
    fullName: deviceId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Unique identifier of the device identity associated with the twin, as it
      exists in the device identity registry.
    syntax:
      content: string deviceId
      return:
        type:
          - string
  - uid: azure-iothub.Twin.etag
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Tag used in optimistic concurrency to avoid multiple parallel editions of
      the device twin.
    syntax:
      content: string etag
      return:
        type:
          - string
  - uid: azure-iothub.Twin.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The desired and reported properties dictionnaries (respectively in
      `properties.desired` and `properties.reported`).
    syntax:
      content: function properties
      return:
        type:
          - function
  - uid: azure-iothub.Twin.tags
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Collection of key/value pairs that is available only on the service side
      and can be used in queries to find specific devices.
    syntax:
      content: '[key: string]: string tags'
      return:
        type:
          - '[key: string]: string'
  - uid: azure-iothub.Twin.get
    name: get
    children: []
    langs:
      - typeScript
    summary: Gets the latest version of this device twin from the IoT Hub service.
    syntax:
      content: 'function get(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<@azure-iothub.Twin>
          description: |
            The function to call when the operation is
                                           complete. `done` will be called with three
                                           arguments: an Error object (can be null), a
                                           [Twin](xref:azure-iothub.Twin)
                                           object representing the created device
                                           identity, and a transport-specific response
                                           object useful for logging or debugging.
    type: method
  - uid: azure-iothub.Twin.toJSON
    name: toJSON
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - object
    type: method
  - uid: azure-iothub.Twin.update
    name: update
    children: []
    langs:
      - typeScript
    summary: Update the device twin with the patch provided as argument.
    syntax:
      content: 'function update(patch: any, done: Callback<Twin>)'
      parameters:
        - id: patch
          type:
            - any
          description: Object containing the new values to apply to this device twin.
        - id: done
          type:
            - Callback<@azure-iothub.Twin>
          description: |
            The function to call when the operation is
                                           complete. `done` will be called with three
                                           arguments: an Error object (can be null), a
                                           [Twin](xref:azure-iothub.Twin)
                                           object representing the created device
                                           identity, and a transport-specific response
                                           object useful for logging or debugging.
    type: method
