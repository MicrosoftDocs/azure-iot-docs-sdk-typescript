### YamlMime:TSType
name: SourceManager
uid: azure-maps-control.atlas.SourceManager
package: azure-maps-control
summary: |-
  A manager for the map control's sources.
  Exposed through the sources property of the atlas.Map class.
  Cannot be instantiated by the user.
fullName: SourceManager
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: 'add(Source | Source[])'
    uid: azure-maps-control.atlas.SourceManager.add
    package: azure-maps-control
    summary: |-
      Adds one or more data sources to the map.
      The map must be ready before a source can be added.
      Use the map.events.add method with event type 'ready'.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function add(source: Source | Source[])'
      parameters:
        - id: source
          type: >-
            <xref uid="azure-maps-control.atlas.source.Source" /> | <xref
            uid="azure-maps-control.atlas.source.Source" />[]
          description: |+

  - name: clear()
    uid: azure-maps-control.atlas.SourceManager.clear
    package: azure-maps-control
    summary: Removes all sources from the map.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function clear()
  - name: getById(string)
    uid: azure-maps-control.atlas.SourceManager.getById
    package: azure-maps-control
    summary: Retrieves a source with the specified id.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getById(id: string): Source'
      parameters:
        - id: id
          type: string
          description: |+

      return:
        description: ''
        type: <xref uid="azure-maps-control.atlas.source.Source" />
  - name: >-
      getFeatureState(string | Shape | Feature<atlas.data.Geometry, any>, string
      | Source, string)
    uid: azure-maps-control.atlas.SourceManager.getFeatureState
    package: azure-maps-control
    summary: Gets the state of a feature
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFeatureState(feature: string | Shape |
        Feature<atlas.data.Geometry, any>, source: string | Source,
        sourceLayer?: string): object
      parameters:
        - id: feature
          type: >-
            string | <xref uid="azure-maps-control.atlas.Shape" /> | <xref
            uid="azure-maps-control.atlas.data.Feature" />&lt;<xref
            uid="azure-maps-control.atlas.data.Geometry" />, any&gt;
          description: the ID of the feature
        - id: source
          type: string | <xref uid="azure-maps-control.atlas.source.Source" />
          description: the ID of the source
        - id: sourceLayer
          type: string
          description: |
            the ID of the layer
      return:
        description: ''
        type: object
  - name: 'getRenderedShapes(string | Source, Expression, string)'
    uid: azure-maps-control.atlas.SourceManager.getRenderedShapes
    package: azure-maps-control
    summary: >-
      Returns all rendered shape features in a source that match a specified
      filter. If the source is a vector tile source, a source layer name needs
      to be specified.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRenderedShapes(source: string | Source, filter?: Expression,
        sourceLayer?: string): Array<Feature<atlas.data.Geometry, any> | Shape>
      parameters:
        - id: source
          type: string | <xref uid="azure-maps-control.atlas.source.Source" />
          description: source to be queried
        - id: filter
          type: <xref uid="azure-maps-control.atlas.Expression" />
          description: a filter to limit the query
        - id: sourceLayer
          type: string
          description: |
            the layer where shapes and features are matched
      return:
        description: ''
        type: >-
          Array&lt;<xref uid="azure-maps-control.atlas.data.Feature" />&lt;<xref
          uid="azure-maps-control.atlas.data.Geometry" />, any&gt; | <xref
          uid="azure-maps-control.atlas.Shape" />&gt;
  - name: getSources()
    uid: azure-maps-control.atlas.SourceManager.getSources
    package: azure-maps-control
    summary: Retrieves all sources that have been added to the map.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getSources(): Source[]'
      return:
        description: ''
        type: '<xref uid="azure-maps-control.atlas.source.Source" />[]'
  - name: isSourceLoaded(string | Source)
    uid: azure-maps-control.atlas.SourceManager.isSourceLoaded
    package: azure-maps-control
    summary: Returns a boolean indicating if the source is loaded or not.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isSourceLoaded(source: string | Source): boolean'
      parameters:
        - id: source
          type: string | <xref uid="azure-maps-control.atlas.source.Source" />
          description: |
            The id of a source or a Source object.
      return:
        description: ''
        type: boolean
  - name: remove(string | Source | Array<string | Source>)
    uid: azure-maps-control.atlas.SourceManager.remove
    package: azure-maps-control
    summary: >-
      Removes one or more sources from the map by specifying the source id or
      providing the source itself.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function remove(source: string | Source | Array<string | Source>)'
      parameters:
        - id: source
          type: >-
            string | <xref uid="azure-maps-control.atlas.source.Source" /> |
            Array&lt;string | <xref uid="azure-maps-control.atlas.source.Source"
            />&gt;
          description: |+

  - name: >-
      removeFeatureState(string | Shape | Feature<atlas.data.Geometry, any>,
      string | Source, string, string)
    uid: azure-maps-control.atlas.SourceManager.removeFeatureState
    package: azure-maps-control
    summary: Removes the state or a single key value of the state of a feature.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeFeatureState(feature: string | Shape |
        Feature<atlas.data.Geometry, any>, source: string | Source,
        sourceLayer?: string, key?: string)
      parameters:
        - id: feature
          type: >-
            string | <xref uid="azure-maps-control.atlas.Shape" /> | <xref
            uid="azure-maps-control.atlas.data.Feature" />&lt;<xref
            uid="azure-maps-control.atlas.data.Geometry" />, any&gt;
          description: the ID of the feature
        - id: source
          type: string | <xref uid="azure-maps-control.atlas.source.Source" />
          description: the ID of the source
        - id: sourceLayer
          type: string
          description: the ID of the layer
        - id: key
          type: string
          description: |
            the key in the feature state to update
  - name: >-
      setFeatureState(string | Shape | Feature<atlas.data.Geometry, any>, string
      | Source, object, string)
    uid: azure-maps-control.atlas.SourceManager.setFeatureState
    package: azure-maps-control
    summary: Sets the state of the feature by passing in a key value pair object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setFeatureState(feature: string | Shape |
        Feature<atlas.data.Geometry, any>, source: string | Source, state:
        object, sourceLayer?: string)
      parameters:
        - id: feature
          type: >-
            string | <xref uid="azure-maps-control.atlas.Shape" /> | <xref
            uid="azure-maps-control.atlas.data.Feature" />&lt;<xref
            uid="azure-maps-control.atlas.data.Geometry" />, any&gt;
          description: the ID of the feature
        - id: source
          type: string | <xref uid="azure-maps-control.atlas.source.Source" />
          description: the ID of the source
        - id: state
          type: object
          description: ''
        - id: sourceLayer
          type: string
          description: the ID of the layer
