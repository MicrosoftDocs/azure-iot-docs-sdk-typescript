### YamlMime:TSType
name: SearchGetSearchAddressOptionalParams
uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams
package: azure-maps-rest
summary: Optional Parameters.
fullName: SearchGetSearchAddressOptionalParams
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: btmRight
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.btmRight
    package: azure-maps-rest
    summary: Bottom right position of the bounding box. E.g. 37.553,-122.453
    fullName: btmRight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'btmRight?: string'
      return:
        description: ''
        type: string
  - name: countrySet
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.countrySet
    package: azure-maps-rest
    summary: >-
      Comma separated string of country codes, e.g. FR,ES. This will limit the
      search to the

      specified countries
    fullName: countrySet
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'countrySet?: string[]'
      return:
        description: ''
        type: string[]
  - name: extendedPostalCodesFor
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.extendedPostalCodesFor
    package: azure-maps-rest
    summary: >-
      Indexes for which extended postal codes should be included in the results.


      Available indexes are:


      **Addr** = Address ranges


      **Geo** = Geographies


      **PAD** = Point Addresses


      **POI** = Points of Interest


      **Str** = Streets


      **XStr** = Cross Streets (intersections)


      Value should be a comma separated list of index types (in any order) or
      **None** for no

      indexes.


      By default extended postal codes are included for all indexes except Geo.
      Extended postal code

      lists for geographies can be quite long so they have to be explicitly
      requested when needed.


      Usage examples:


      extendedPostalCodesFor=POI


      extendedPostalCodesFor=PAD,Addr,POI


      extendedPostalCodesFor=None


      Extended postal code is returned as an **extendedPostalCode** property of
      an address.

      Availability is region-dependent.
    fullName: extendedPostalCodesFor
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'extendedPostalCodesFor?: string'
      return:
        description: ''
        type: string
  - name: language
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.language
    package: azure-maps-rest
    summary: >-
      Language in which search results should be returned. Should be one of
      supported IETF language

      tags, case insensitive. When data in specified language is not available
      for a specific field,

      default language is used.


      Please refer to [Supported

      Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages)
      for details.
    fullName: language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'language?: string'
      return:
        description: ''
        type: string
  - name: lat
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.lat
    package: azure-maps-rest
    summary: Latitude where results should be biased. E.g. 37.337
    fullName: lat
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lat?: number'
      return:
        description: ''
        type: number
  - name: limit
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.limit
    package: azure-maps-rest
    summary: >-
      Maximum number of responses that will be returned. Default: 10, minimum: 1
      and maximum: 100
    fullName: limit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'limit?: number'
      return:
        description: ''
        type: number
  - name: lon
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.lon
    package: azure-maps-rest
    summary: Longitude where results should be biased. E.g. -121.89
    fullName: lon
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lon?: number'
      return:
        description: ''
        type: number
  - name: ofs
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.ofs
    package: azure-maps-rest
    summary: Starting offset of the returned results within the full result set.
    fullName: ofs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ofs?: number'
      return:
        description: ''
        type: number
  - name: radius
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.radius
    package: azure-maps-rest
    summary: >-
      The radius in meters to for the results to be constrained to the defined
      area
    fullName: radius
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'radius?: number'
      return:
        description: ''
        type: number
  - name: topLeft
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.topLeft
    package: azure-maps-rest
    summary: Top left position of the bounding box. E.g. 37.553,-122.453
    fullName: topLeft
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'topLeft?: string'
      return:
        description: ''
        type: string
  - name: typeahead
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.typeahead
    package: azure-maps-rest
    summary: >-
      Boolean. If the typeahead flag is set, the query will be interpreted as a
      partial input and

      the search will enter predictive mode
    fullName: typeahead
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'typeahead?: boolean'
      return:
        description: ''
        type: boolean
  - name: view
    uid: azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.view
    package: azure-maps-rest
    summary: >-
      The View parameter specifies which set of geopolitically disputed content
      is returned via

      Azure Maps services, including  borders and labels displayed on the map.
      The View parameter

      (also referred to as “user region parameter”) will show the  correct maps
      for that

      country/region. By default, the View parameter is set to “Unified” even if
      you haven’t defined

      it in  the request. It is your responsibility to determine the location of
      your users, and

      then set the View parameter correctly  for that location. Alternatively,
      you have the option

      to set ‘View=Auto’, which will return the map data based on the IP 
      address of the request.

      The View parameter in Azure Maps must be used in compliance with
      applicable laws, including

      those  regarding mapping, of the country where maps, images and other data
      and third party

      content that you are authorized to  access via Azure Maps is made
      available. Example: view=IN.


      Please refer to [Supported
      Views](https://aka.ms/AzureMapsLocalizationViews) for details and

      to see the available Views.
    fullName: view
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'view?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: abortSignal
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.abortSignal
    package: azure-maps-rest
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: AbortSignalLike
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.abortSignal
  - name: customHeaders
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.customHeaders
    package: azure-maps-rest
    summary: |-
      User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'customHeaders?: {[key: string]: string}'
      return:
        description: ''
        type: '{[key: string]: string}'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.customHeaders
  - name: onDownloadProgress
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.onDownloadProgress
    package: azure-maps-rest
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.onDownloadProgress
  - name: onUploadProgress
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.onUploadProgress
    package: azure-maps-rest
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.onUploadProgress
  - name: timeout
    uid: >-
      azure-maps-rest.export=.Models.SearchGetSearchAddressOptionalParams.timeout
    package: azure-maps-rest
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timeout?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.timeout
extends: RequestOptionsBase
