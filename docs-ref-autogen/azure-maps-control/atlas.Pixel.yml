### YamlMime:TSType
name: Pixel
uid: azure-maps-control.atlas.Pixel
package: azure-maps-control
summary: 'Represent a pixel coordinate or offset. Extends an array of [x, y].'
fullName: Pixel
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Pixel(number, number)'
    uid: azure-maps-control.atlas.Pixel.constructor
    package: azure-maps-control
    summary: >-
      Constructs a Pixel object and initializes it with the specified x and y
      coordinates.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Pixel(x: number, y: number)'
      parameters:
        - id: x
          type: number
          description: The horizontal pixel offset.
        - id: 'y'
          type: number
          description: |
            The vertical pixel offset.
properties:
  - name: Array
    uid: azure-maps-control.atlas.Pixel.Array
    package: azure-maps-control
    summary: ''
    fullName: Array
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Array: ArrayConstructor'
      return:
        type: ArrayConstructor
        description: ''
  - name: length
    uid: azure-maps-control.atlas.Pixel.length
    package: azure-maps-control
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest element defined in an array.
    fullName: length
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        type: number
        description: ''
methods:
  - name: 'concat(ConcatArray<number>[])'
    uid: azure-maps-control.atlas.Pixel.concat
    package: azure-maps-control
    summary: Combines two or more arrays.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: ConcatArray<number>[])'
      parameters:
        - id: items
          type: 'ConcatArray&lt;number&gt;[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type: 'number[]'
        description: ''
  - name: 'concat(T | ConcatArray<T>[])'
    uid: azure-maps-control.atlas.Pixel.concat_1
    package: azure-maps-control
    summary: Combines two or more arrays.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type: 'T | ConcatArray&lt;T&gt;[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type: 'number[]'
        description: ''
  - name: 'every((value: number, index: number, array: number[]) => unknown, any)'
    uid: azure-maps-control.atlas.Pixel.every
    package: azure-maps-control
    summary: Determines whether all the members of an array satisfy the specified test.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function every(callbackfn: (value: number, index: number, array:
        number[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The every method
            calls the callbackfn function for each element in array1 until the
            callbackfn returns false, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: boolean
        description: ''
  - name: 'filter((value: number, index: number, array: number[]) => unknown, any)'
    uid: azure-maps-control.atlas.Pixel.filter_1
    package: azure-maps-control
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter(callbackfn: (value: number, index: number, array:
        number[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: 'number[]'
        description: ''
  - name: 'filter<S>((value: number, index: number, array: number[]) => boolean, any)'
    uid: azure-maps-control.atlas.Pixel.filter
    package: azure-maps-control
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter<S>(callbackfn: (value: number, index: number, array:
        number[]) => boolean, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; boolean'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: 'S[]'
        description: ''
  - name: 'forEach((value: number, index: number, array: number[]) => void, any)'
    uid: azure-maps-control.atlas.Pixel.forEach
    package: azure-maps-control
    summary: Performs the specified action for each element in an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: number, index: number, array:
        number[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; void'
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
  - name: fromData(object)
    uid: azure-maps-control.atlas.Pixel.fromData
    package: azure-maps-control
    summary: >-
      Generates a Pixel object from an object that contains coordinate
      information.

      The object is scanned for x and y properties using a case insensitive
      test.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function fromData(data: object)'
      parameters:
        - id: data
          type: object
          description: The object to extract coordinate information from.
      return:
        type: <xref uid="azure-maps-control.atlas.Pixel" />
        description: A Pixel object that represents the provided data information.
  - name: 'getDestination(Pixel, number, number)'
    uid: azure-maps-control.atlas.Pixel.getDestination
    package: azure-maps-control
    summary: |-
      Calculates a destination pixel given an origin pixel,
      a heading relative to the y-axis (0 = north) with clockwise-rotation,
      and a distance in pixel units.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getDestination(origin: Pixel, heading: number, distance:
        number)
      parameters:
        - id: origin
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: The starting pixel.
        - id: heading
          type: number
          description: The heading at which to move away from the origin pixel.
        - id: distance
          type: number
          description: |
            The distance to move from the origin pixel.
      return:
        type: <xref uid="azure-maps-control.atlas.Pixel" />
        description: ''
  - name: 'getDistance(Pixel, Pixel)'
    uid: azure-maps-control.atlas.Pixel.getDistance
    package: azure-maps-control
    summary: |-
      Calculates the distance between two pixels.
      Returned value is in screen pixel units.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getDistance(p1: Pixel, p2: Pixel)'
      parameters:
        - id: p1
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: The first pixel.
        - id: p2
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: |
            The second pixel.
      return:
        type: number
        description: ''
  - name: 'getHeading(Pixel, Pixel)'
    uid: azure-maps-control.atlas.Pixel.getHeading
    package: azure-maps-control
    summary: >-
      Calculates the heading between two pixels.â€‹ The heading value is relative
      to the y-axis (0 = north) with clockwise-rotation.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getHeading(origin: Pixel, destination: Pixel)'
      parameters:
        - id: origin
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: The pixel the heading will point away from.
        - id: destination
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: |
            The pixel the heading will point toward.
      return:
        type: number
        description: ''
  - name: getX(Pixel)
    uid: azure-maps-control.atlas.Pixel.getX
    package: azure-maps-control
    summary: Return the x coordinate of the specified pixel.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getX(pixel: Pixel)'
      parameters:
        - id: pixel
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: |
            The pixel to get the x coordinate of.
      return:
        type: number
        description: ''
  - name: getY(Pixel)
    uid: azure-maps-control.atlas.Pixel.getY
    package: azure-maps-control
    summary: Return the y coordinate of the specified pixel.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getY(pixel: Pixel)'
      parameters:
        - id: pixel
          type: <xref uid="azure-maps-control.atlas.Pixel" />
          description: |
            The pixel to get the y coordinate of.
      return:
        type: number
        description: ''
  - name: 'indexOf(number, number)'
    uid: azure-maps-control.atlas.Pixel.indexOf
    package: azure-maps-control
    summary: Returns the index of the first occurrence of a value in an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function indexOf(searchElement: number, fromIndex?: number)'
      parameters:
        - id: searchElement
          type: number
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
      return:
        type: number
        description: ''
  - name: join(string)
    uid: azure-maps-control.atlas.Pixel.join
    package: azure-maps-control
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type: string
          description: >
            A string used to separate one element of an array from the next in
            the resulting String. If omitted, the array elements are separated
            with a comma.
      return:
        type: string
        description: ''
  - name: 'lastIndexOf(number, number)'
    uid: azure-maps-control.atlas.Pixel.lastIndexOf
    package: azure-maps-control
    summary: Returns the index of the last occurrence of a specified value in an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function lastIndexOf(searchElement: number, fromIndex?: number)'
      parameters:
        - id: searchElement
          type: number
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at the last index in the array.
      return:
        type: number
        description: ''
  - name: 'map<U>((value: number, index: number, array: number[]) => U, any)'
    uid: azure-maps-control.atlas.Pixel.map
    package: azure-maps-control
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function map<U>(callbackfn: (value: number, index: number, array:
        number[]) => U, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; U'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: 'U[]'
        description: ''
  - name: pop()
    uid: azure-maps-control.atlas.Pixel.pop
    package: azure-maps-control
    summary: Removes the last element from an array and returns it.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function pop()
      return:
        type: number | undefined
        description: ''
  - name: 'push(number[])'
    uid: azure-maps-control.atlas.Pixel.push
    package: azure-maps-control
    summary: 'Appends new elements to an array, and returns the new length of the array.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(items: number[])'
      parameters:
        - id: items
          type: 'number[]'
          description: |
            New elements of the Array.
      return:
        type: number
        description: ''
  - name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: number[]) => number)
    uid: azure-maps-control.atlas.Pixel.reduce
    package: azure-maps-control
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: number[]) => number)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: number[]) =&gt; number
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type: number
        description: ''
  - name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: number[]) => number, number)
    uid: azure-maps-control.atlas.Pixel.reduce_1
    package: azure-maps-control
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: number[]) => number, initialValue:
        number)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: number[]) =&gt; number
          description: ''
        - id: initialValue
          type: number
          description: ''
      return:
        type: number
        description: ''
  - name: >-
      reduce<U>((previousValue: U, currentValue: number, currentIndex: number,
      array: number[]) => U, U)
    uid: azure-maps-control.atlas.Pixel.reduce_2
    package: azure-maps-control
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue: number,
        currentIndex: number, array: number[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: number, currentIndex: number,
            array: number[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type: U
        description: ''
  - name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: number[]) => number)
    uid: azure-maps-control.atlas.Pixel.reduceRight
    package: azure-maps-control
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: number[]) => number)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: number[]) =&gt; number
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type: number
        description: ''
  - name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: number[]) => number, number)
    uid: azure-maps-control.atlas.Pixel.reduceRight_1
    package: azure-maps-control
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: number[]) => number, initialValue:
        number)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: number[]) =&gt; number
          description: ''
        - id: initialValue
          type: number
          description: ''
      return:
        type: number
        description: ''
  - name: >-
      reduceRight<U>((previousValue: U, currentValue: number, currentIndex:
      number, array: number[]) => U, U)
    uid: azure-maps-control.atlas.Pixel.reduceRight_2
    package: azure-maps-control
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        number, currentIndex: number, array: number[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: number, currentIndex: number,
            array: number[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type: U
        description: ''
  - name: reverse()
    uid: azure-maps-control.atlas.Pixel.reverse
    package: azure-maps-control
    summary: Reverses the elements in an Array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function reverse()
      return:
        type: 'number[]'
        description: ''
  - name: shift()
    uid: azure-maps-control.atlas.Pixel.shift
    package: azure-maps-control
    summary: Removes the first element from an array and returns it.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function shift()
      return:
        type: number | undefined
        description: ''
  - name: 'slice(number, number)'
    uid: azure-maps-control.atlas.Pixel.slice
    package: azure-maps-control
    summary: Returns a section of an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type: number
          description: The beginning of the specified portion of the array.
        - id: end
          type: number
          description: |
            The end of the specified portion of the array.
      return:
        type: 'number[]'
        description: ''
  - name: 'some((value: number, index: number, array: number[]) => unknown, any)'
    uid: azure-maps-control.atlas.Pixel.some
    package: azure-maps-control
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function some(callbackfn: (value: number, index: number, array:
        number[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: number[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The some method calls
            the callbackfn function for each element in array1 until the
            callbackfn returns true, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: boolean
        description: ''
  - name: 'sort((a: number, b: number) => number)'
    uid: azure-maps-control.atlas.Pixel.sort
    package: azure-maps-control
    summary: Sorts an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sort(compareFn?: (a: number, b: number) => number)'
      parameters:
        - id: compareFn
          type: '(a: number, b: number) =&gt; number'
          description: >
            The name of the function used to determine the order of the
            elements. If omitted, the elements are sorted in ascending, ASCII
            character order.
      return:
        type: this
        description: ''
  - name: 'splice(number, number)'
    uid: azure-maps-control.atlas.Pixel.splice
    package: azure-maps-control
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: |
            The number of elements to remove.
      return:
        type: 'number[]'
        description: ''
  - name: 'splice(number, number, number[])'
    uid: azure-maps-control.atlas.Pixel.splice_1
    package: azure-maps-control
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: number[])'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: The number of elements to remove.
        - id: items
          type: 'number[]'
          description: |
            Elements to insert into the array in place of the deleted elements.
      return:
        type: 'number[]'
        description: ''
  - name: toLocaleString()
    uid: azure-maps-control.atlas.Pixel.toLocaleString
    package: azure-maps-control
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocalString methods.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toLocaleString()
      return:
        type: string
        description: ''
  - name: toString()
    uid: azure-maps-control.atlas.Pixel.toString
    package: azure-maps-control
    summary: Returns a string representation of an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toString()
      return:
        type: string
        description: ''
  - name: 'unshift(number[])'
    uid: azure-maps-control.atlas.Pixel.unshift
    package: azure-maps-control
    summary: Inserts new elements at the start of an array.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unshift(items: number[])'
      parameters:
        - id: items
          type: 'number[]'
          description: |
            Elements to insert at the start of the Array.
      return:
        type: number
        description: ''
extends: Array&lt;number&gt;
