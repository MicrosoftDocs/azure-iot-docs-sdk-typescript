### YamlMime:UniversalReference
items:
  - uid: azure-iot-common.RetryOperation
    name: RetryOperation
    fullName: RetryOperation
    children:
      - azure-iot-common.RetryOperation.constructor
      - azure-iot-common.RetryOperation.retry
    langs:
      - typeScript
    type: class
    summary: >-
      Implements the necessary logic to retry operations such as connecting,
      receiving C2D messages, sending telemetry, twin updates, etc.
    package: azure-iot-common
    module: Global
  - uid: azure-iot-common.RetryOperation.constructor
    name: RetryOperation
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Creates an instance of <xref:azure-iot-common.RetryOperation.>'
    syntax:
      content: 'new RetryOperation(policy: RetryPolicy, maxTimeout: number)'
      parameters:
        - id: policy
          type:
            - '@azure-iot-common.RetryPolicy'
          description: >-
            The retry policy to be used for this operation, which determines
            what error is "retryable" or not and how fast to retry.
        - id: maxTimeout
          type:
            - number
          description: >
            The maximum timeout for this operation, after which no retry will be
            attempted.
    module: Global
  - uid: azure-iot-common.RetryOperation.retry
    name: retry
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Executes an operation and retries if it fails and the retry policy allows
      it.
    syntax:
      content: >-
        function retry(operation: (opCallback: (err?: Error, result?: any,
        response?: any) => void) => void, finalCallback: (err?: Error, result?:
        any, response?: any) => void)
      parameters:
        - id: operation
          type:
            - >-
              (opCallback: (err?: Error, result?: any, response?: any) => void)
              => void
          description: The operation to execute.
        - id: finalCallback
          type:
            - '(err?: Error, result?: any, response?: any) => void'
          description: >
            The callback to call with the final error or result, after retries
            if necessary.
    module: Global
