### YamlMime:TSType
name: RouteGetRouteRangeOptionalParams
uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams
package: azure-maps-rest
summary: Optional Parameters.
fullName: RouteGetRouteRangeOptionalParams
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: accelerationEfficiency
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.accelerationEfficiency
    package: azure-maps-rest
    summary: >-
      Specifies the efficiency of converting chemical energy stored in fuel to
      kinetic energy when

      the vehicle accelerates _(i.e.
      KineticEnergyGained/ChemicalEnergyConsumed).

      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using

      **fuelEnergyDensityInMJoulesPerLiter**.


      Must be paired with **decelerationEfficiency**.


      The range of values allowed are 0.0 to 1/**decelerationEfficiency**.


      Sensible Values : for **Combustion Model** : 0.33, for **Electric Model**
      : 0.66
    fullName: accelerationEfficiency
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'accelerationEfficiency?: number'
      return:
        description: ''
        type: number
  - name: auxiliaryPowerInkW
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.auxiliaryPowerInkW
    package: azure-maps-rest
    summary: >-
      Specifies the amount of power consumed for sustaining auxiliary systems,
      in kilowatts (kW).


      It can be used to specify consumption due to devices and systems such as
      AC systems, radio,

      heating, etc.


      Sensible Values : 1.7
    fullName: auxiliaryPowerInkW
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'auxiliaryPowerInkW?: string'
      return:
        description: ''
        type: string
  - name: auxiliaryPowerInLitersPerHour
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.auxiliaryPowerInLitersPerHour
    package: azure-maps-rest
    summary: >-
      Specifies the amount of fuel consumed for sustaining auxiliary systems of
      the vehicle, in

      liters per hour.


      It can be used to specify consumption due to devices and systems such as
      AC systems, radio,

      heating, etc.


      Sensible Values : 0.2
    fullName: auxiliaryPowerInLitersPerHour
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'auxiliaryPowerInLitersPerHour?: number'
      return:
        description: ''
        type: number
  - name: avoid
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.avoid
    package: azure-maps-rest
    summary: >-
      Specifies something that the route calculation should try to avoid when
      determining the route.

      Can be specified multiple times in one request, for example,

      '&avoid=motorways&avoid=tollRoads&avoid=ferries'. In
      calculateReachableRange requests, the

      value alreadyUsedRoads must not be used. Possible values include:
      'tollRoads', 'motorways',

      'ferries', 'unpavedRoads', 'carpools', 'alreadyUsedRoads',
      'borderCrossings'
    fullName: avoid
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'avoid?: Avoid[]'
      return:
        description: ''
        type: <xref uid="azure-maps-rest.export" />=.<xref uid="Models.Avoid" />[]
  - name: constantSpeedConsumptionInkWhPerHundredkm
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.constantSpeedConsumptionInkWhPerHundredkm
    package: azure-maps-rest
    summary: >-
      Specifies the speed-dependent component of consumption.


      Provided as an unordered list of speed/consumption-rate pairs. The list
      defines points on a

      consumption curve. Consumption rates for speeds not in the list are found
      as follows:


      * by linear interpolation, if the given speed lies in between two speeds
      in the list


      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by

      the nearest two points in the list


      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate

      points for the same speed. If it only contains a single point, then the
      consumption rate of

      that point is used without further processing.


      Consumption specified for the largest speed must be greater than or equal
      to that of the

      penultimate largest speed. This ensures that extrapolation does not lead
      to negative

      consumption rates.


      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to

      a negative consumption rate for any smaller  speed.


      The valid range for the consumption values(expressed in kWh/100km) is
      between 0.01 and

      100000.0.


      Sensible Values : 50,8.2:130,21.3


      This parameter is required for **Electric consumption model**.
    fullName: constantSpeedConsumptionInkWhPerHundredkm
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constantSpeedConsumptionInkWhPerHundredkm?: string'
      return:
        description: ''
        type: string
  - name: constantSpeedConsumptionInLitersPerHundredkm
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.constantSpeedConsumptionInLitersPerHundredkm
    package: azure-maps-rest
    summary: >-
      Specifies the speed-dependent component of consumption.


      Provided as an unordered list of colon-delimited speed & consumption-rate
      pairs. The list

      defines points on a consumption curve. Consumption rates for speeds not in
      the list are found

      as follows:


      * by linear interpolation, if the given speed lies in between two speeds
      in the list


      * by linear extrapolation otherwise, assuming a constant
      (ΔConsumption/ΔSpeed) determined by

      the nearest two points in the list


      The list must contain between 1 and 25 points (inclusive), and may not
      contain duplicate

      points for the same speed. If it only contains a single point, then the
      consumption rate of

      that point is used without further processing.


      Consumption specified for the largest speed must be greater than or equal
      to that of the

      penultimate largest speed. This ensures that extrapolation does not lead
      to negative

      consumption rates.


      Similarly, consumption values specified for the two smallest speeds in the
      list cannot lead to

      a negative consumption rate for any smaller speed.


      The valid range for the consumption values(expressed in l/100km) is
      between 0.01 and 100000.0.


      Sensible Values : 50,6.3:130,11.5


      **Note** : This parameter is required for **The Combustion Consumption
      Model**.
    fullName: constantSpeedConsumptionInLitersPerHundredkm
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constantSpeedConsumptionInLitersPerHundredkm?: number'
      return:
        description: ''
        type: number
  - name: currentChargeInkWh
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.currentChargeInkWh
    package: azure-maps-rest
    summary: |-
      Specifies the current electric energy supply in kilowatt hours (kWh).

      This parameter co-exists with **maxChargeInkWh** parameter.

      The range of values allowed are 0.0 to **maxChargeInkWh**.

      Sensible Values : 43
    fullName: currentChargeInkWh
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'currentChargeInkWh?: string'
      return:
        description: ''
        type: string
  - name: currentFuelInLiters
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.currentFuelInLiters
    package: azure-maps-rest
    summary: |-
      Specifies the current supply of fuel in liters.

      Sensible Values : 55
    fullName: currentFuelInLiters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'currentFuelInLiters?: number'
      return:
        description: ''
        type: number
  - name: decelerationEfficiency
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.decelerationEfficiency
    package: azure-maps-rest
    summary: >-
      Specifies the efficiency of converting kinetic energy to saved (not
      consumed) fuel when the

      vehicle decelerates _(i.e. ChemicalEnergySaved/KineticEnergyLost).
      ChemicalEnergySaved_ is

      obtained by converting saved (not consumed) fuel to energy using

      **fuelEnergyDensityInMJoulesPerLiter**.


      Must be paired with **accelerationEfficiency**.


      The range of values allowed are 0.0 to 1/**accelerationEfficiency**.


      Sensible Values : for **Combustion Model** : 0.83, for **Electric Model**
      : 0.91
    fullName: decelerationEfficiency
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'decelerationEfficiency?: number'
      return:
        description: ''
        type: number
  - name: departAt
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.departAt
    package: azure-maps-rest
    summary: >-
      The date and time of departure from the origin point. Departure times
      apart from now must be

      specified as a dateTime. When a time zone offset is not specified, it will
      be assumed to be

      that of the origin point. The departAt value must be in the future in the
      date-time format

      (1996-12-19T16:39:57-08:00).
    fullName: departAt
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'departAt?: Date'
      return:
        description: ''
        type: Date
  - name: downhillEfficiency
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.downhillEfficiency
    package: azure-maps-rest
    summary: >-
      Specifies the efficiency of converting potential energy to saved (not
      consumed) fuel when the

      vehicle loses elevation _(i.e. ChemicalEnergySaved/PotentialEnergyLost).
      ChemicalEnergySaved_

      is obtained by converting saved (not consumed) fuel to energy using

      **fuelEnergyDensityInMJoulesPerLiter**.


      Must be paired with **uphillEfficiency**.


      The range of values allowed are 0.0 to 1/**uphillEfficiency**.


      Sensible Values : for **Combustion Model** : 0.51, for **Electric Model**
      : 0.73
    fullName: downhillEfficiency
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'downhillEfficiency?: number'
      return:
        description: ''
        type: number
  - name: energyBudgetInkWh
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.energyBudgetInkWh
    package: azure-maps-rest
    summary: >-
      Electric energy budget in kilowatt hours (kWh) that determines maximal
      range which can be

      travelled using the specified Electric Consumption Model. This parameter
      is required if

      vehicleEngineType is Electric and timeBudgetInSec is not used. Either
      fuelBudgetInLiters,

      energyBudgetInkWh or timeBudgetInSec must be provided.
    fullName: energyBudgetInkWh
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'energyBudgetInkWh?: number'
      return:
        description: ''
        type: number
  - name: fuelBudgetInLiters
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.fuelBudgetInLiters
    package: azure-maps-rest
    summary: >-
      Fuel budget in liters that determines maximal range which can be travelled
      using the specified

      Combustion Consumption Model. This parameter is required if
      vehicleEngineType is Combustion

      and timeBudgetInSec is not used. Either fuelBudgetInLiters,
      energyBudgetInkWh or

      timeBudgetInSec must be provided.
    fullName: fuelBudgetInLiters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'fuelBudgetInLiters?: number'
      return:
        description: ''
        type: number
  - name: fuelEnergyDensityInMJoulesPerLiter
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.fuelEnergyDensityInMJoulesPerLiter
    package: azure-maps-rest
    summary: >-
      Specifies the amount of chemical energy stored in one liter of fuel in
      megajoules (MJ). It is

      used in conjunction with the ***Efficiency** parameters for conversions
      between saved or

      consumed energy and fuel. For example, energy density is 34.2 MJ/l for
      gasoline, and 35.8 MJ/l

      for Diesel fuel.


      This parameter is required if any ***Efficiency** parameter is set.


      Sensible Values : 34.2
    fullName: fuelEnergyDensityInMJoulesPerLiter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'fuelEnergyDensityInMJoulesPerLiter?: number'
      return:
        description: ''
        type: number
  - name: hilliness
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.hilliness
    package: azure-maps-rest
    summary: >-
      Degree of hilliness for thrilling route. This parameter can only be used
      in conjunction with

      `routeType`=thrilling. Possible values include: 'low', 'normal', 'high'
    fullName: hilliness
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hilliness?: Hilliness'
      return:
        description: ''
        type: <xref uid="azure-maps-rest.export" />=.<xref uid="Models.Hilliness" />
  - name: maxChargeInkWh
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.maxChargeInkWh
    package: azure-maps-rest
    summary: >-
      Specifies the maximum electric energy supply in kilowatt hours (kWh) that
      may be stored in the

      vehicle's battery.


      This parameter co-exists with **currentChargeInkWh** parameter.


      Minimum value has to be greater than or equal to **currentChargeInkWh**.


      Sensible Values : 85
    fullName: maxChargeInkWh
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxChargeInkWh?: string'
      return:
        description: ''
        type: string
  - name: routeType
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.routeType
    package: azure-maps-rest
    summary: >-
      The type of route requested. Possible values include: 'fastest',
      'shortest', 'eco',

      'thrilling'
    fullName: routeType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'routeType?: RouteType'
      return:
        description: ''
        type: <xref uid="azure-maps-rest.export" />=.<xref uid="Models.RouteType" />
  - name: timeBudgetInSec
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.timeBudgetInSec
    package: azure-maps-rest
    summary: >-
      Time budget in seconds that determines maximal range which can be
      travelled using driving

      time. The consumption parameters will only affect eco-routes and thereby
      indirectly the

      driving time. This parameter is required if fuelBudgetInLiters or
      energyBudgetInkWh are not

      used. Either fuelBudgetInLiters, energyBudgetInkWh or timeBudgetInSec must
      be provided.
    fullName: timeBudgetInSec
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timeBudgetInSec?: number'
      return:
        description: ''
        type: number
  - name: traffic
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.traffic
    package: azure-maps-rest
    summary: >-
      Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing. Note that although
      the current traffic

      data is ignored

      during routing, the effect of historic traffic on effective road speeds is
      still incorporated.
    fullName: traffic
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'traffic?: boolean'
      return:
        description: ''
        type: boolean
  - name: travelMode
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.travelMode
    package: azure-maps-rest
    summary: >-
      The mode of travel for the requested route. Note that the requested
      travelMode may not be

      available for the entire route. Where the requested travelMode is not
      available for a

      particular section, the travelMode element of the response for that
      section will be other.

      Note that travel modes bus, motorcycle, taxi and van are BETA
      functionality. Full restriction

      data is not available in all areas. In **calculateReachableRange**
      requests, the values

      bicycle and pedestrian must not be used. Possible values include: 'car',
      'truck', 'taxi',

      'bus', 'van', 'motorcycle', 'bicycle', 'pedestrian'
    fullName: travelMode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'travelMode?: TravelMode'
      return:
        description: ''
        type: >-
          <xref uid="azure-maps-rest.export" />=.<xref uid="Models.TravelMode"
          />
  - name: uphillEfficiency
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.uphillEfficiency
    package: azure-maps-rest
    summary: >-
      Specifies the efficiency of converting chemical energy stored in fuel to
      potential energy when

      the vehicle gains elevation _(i.e.
      PotentialEnergyGained/ChemicalEnergyConsumed).

      ChemicalEnergyConsumed_ is obtained by converting consumed fuel to
      chemical energy using

      **fuelEnergyDensityInMJoulesPerLiter**.


      Must be paired with **downhillEfficiency**.


      The range of values allowed are 0.0 to 1/**downhillEfficiency**.


      Sensible Values : for **Combustion Model** : 0.27, for **Electric Model**
      : 0.74
    fullName: uphillEfficiency
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'uphillEfficiency?: number'
      return:
        description: ''
        type: number
  - name: vehicleAxleWeight
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleAxleWeight
    package: azure-maps-rest
    summary: >-
      Weight per axle of the vehicle in kg. A value of 0 means that weight
      restrictions per axle are

      not considered.
    fullName: vehicleAxleWeight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleAxleWeight?: number'
      return:
        description: ''
        type: number
  - name: vehicleCommercial
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleCommercial
    package: azure-maps-rest
    summary: >-
      Vehicle is used for commercial purposes and thus may not be allowed to
      drive  on some roads.
    fullName: vehicleCommercial
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleCommercial?: boolean'
      return:
        description: ''
        type: boolean
  - name: vehicleEngineType
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleEngineType
    package: azure-maps-rest
    summary: >-
      Engine type of the vehicle. When a detailed Consumption Model is
      specified, it must be

      consistent with the value of **vehicleEngineType**. Possible values
      include: 'combustion',

      'electric'
    fullName: vehicleEngineType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleEngineType?: VehicleEngineType'
      return:
        description: ''
        type: >-
          <xref uid="azure-maps-rest.export" />=.<xref
          uid="Models.VehicleEngineType" />
  - name: vehicleHeight
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleHeight
    package: azure-maps-rest
    summary: >-
      Height of the vehicle in meters. A value of 0 means that height
      restrictions are not

      considered.
    fullName: vehicleHeight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleHeight?: number'
      return:
        description: ''
        type: number
  - name: vehicleLength
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleLength
    package: azure-maps-rest
    summary: >-
      Length of the vehicle in meters. A value of 0 means that length
      restrictions are not

      considered.
    fullName: vehicleLength
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleLength?: number'
      return:
        description: ''
        type: number
  - name: vehicleLoadType
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleLoadType
    package: azure-maps-rest
    summary: >-
      Types of cargo that may be classified as hazardous materials and
      restricted from some roads.

      Available vehicleLoadType values are US Hazmat classes 1 through 9, plus
      generic

      classifications for use in other countries. Values beginning with USHazmat
      are for US routing

      while otherHazmat should be used for all other countries. vehicleLoadType
      can be specified

      multiple times. This parameter is currently only considered for
      travelMode=truck. Possible

      values include: 'USHazmatClass1', 'USHazmatClass2', 'USHazmatClass3',
      'USHazmatClass4',

      'USHazmatClass5', 'USHazmatClass6', 'USHazmatClass7', 'USHazmatClass8',
      'USHazmatClass9',

      'otherHazmatExplosive', 'otherHazmatGeneral', 'otherHazmatHarmfulToWater'
    fullName: vehicleLoadType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleLoadType?: VehicleLoadType'
      return:
        description: ''
        type: >-
          <xref uid="azure-maps-rest.export" />=.<xref
          uid="Models.VehicleLoadType" />
  - name: vehicleMaxSpeed
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleMaxSpeed
    package: azure-maps-rest
    summary: >-
      Maximum speed of the vehicle in km/hour. A value of 0 means that an
      appropriate value for the

      vehicle will be determined and applied during route planning. A non-zero
      value may be

      overridden during route planning.
    fullName: vehicleMaxSpeed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleMaxSpeed?: number'
      return:
        description: ''
        type: number
  - name: vehicleWeight
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleWeight
    package: azure-maps-rest
    summary: >-
      Weight of the vehicle in kilograms.


      * It is mandatory if any of the *Efficiency parameters are set.


      * It must be strictly positive when used in the context of the Consumption
      Model. Weight

      restrictions are considered.


      * If no detailed **Consumption Model** is specified and the value of
      **vehicleWeight** is

      non-zero, then weight restrictions are considered.


      * In all other cases, this parameter is ignored.


      Sensible Values : for **Combustion Model** : 1600, for **Electric Model**
      : 1900
    fullName: vehicleWeight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleWeight?: number'
      return:
        description: ''
        type: number
  - name: vehicleWidth
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.vehicleWidth
    package: azure-maps-rest
    summary: >-
      Width of the vehicle in meters. A value of 0 means that width restrictions
      are not considered.
    fullName: vehicleWidth
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vehicleWidth?: number'
      return:
        description: ''
        type: number
  - name: windingness
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.windingness
    package: azure-maps-rest
    summary: >-
      Level of turns for thrilling route. This parameter can only be used in
      conjunction with

      routeType=thrilling. Possible values include: 'low', 'normal', 'high'
    fullName: windingness
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'windingness?: Windingness'
      return:
        description: ''
        type: >-
          <xref uid="azure-maps-rest.export" />=.<xref uid="Models.Windingness"
          />
inheritedProperties:
  - name: abortSignal
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.abortSignal
    package: azure-maps-rest
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: <xref uid="@azure/ms-rest-js.AbortSignalLike" />
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.abortSignal
  - name: customHeaders
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.customHeaders
    package: azure-maps-rest
    summary: |-
      User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'customHeaders?: {[key: string]: string}'
      return:
        description: ''
        type: '{[key: string]: string}'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.customHeaders
  - name: onDownloadProgress
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.onDownloadProgress
    package: azure-maps-rest
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.onDownloadProgress
  - name: onUploadProgress
    uid: >-
      azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.onUploadProgress
    package: azure-maps-rest
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.onUploadProgress
  - name: timeout
    uid: azure-maps-rest.export=.Models.RouteGetRouteRangeOptionalParams.timeout
    package: azure-maps-rest
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timeout?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> msRest.RequestOptionsBase.timeout
extends: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
